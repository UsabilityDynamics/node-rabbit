/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['message.js']) {
  _$jscoverage['message.js'] = [];
  _$jscoverage['message.js'][9] = 0;
  _$jscoverage['message.js'][11] = 0;
  _$jscoverage['message.js'][12] = 0;
  _$jscoverage['message.js'][13] = 0;
  _$jscoverage['message.js'][14] = 0;
  _$jscoverage['message.js'][16] = 0;
  _$jscoverage['message.js'][19] = 0;
  _$jscoverage['message.js'][23] = 0;
  _$jscoverage['message.js'][32] = 0;
  _$jscoverage['message.js'][33] = 0;
  _$jscoverage['message.js'][35] = 0;
  _$jscoverage['message.js'][36] = 0;
  _$jscoverage['message.js'][39] = 0;
  _$jscoverage['message.js'][54] = 0;
  _$jscoverage['message.js'][55] = 0;
  _$jscoverage['message.js'][57] = 0;
  _$jscoverage['message.js'][58] = 0;
  _$jscoverage['message.js'][61] = 0;
  _$jscoverage['message.js'][70] = 0;
  _$jscoverage['message.js'][78] = 0;
}
_$jscoverage['message.js'][9]++;
function Message(data) {
  _$jscoverage['message.js'][11]++;
  if (this instanceof Message) {
    _$jscoverage['message.js'][12]++;
    var type = "own";
  }
  else {
    _$jscoverage['message.js'][13]++;
    if (this instanceof require("./rabbit")) {
      _$jscoverage['message.js'][14]++;
      var type = "rabbit";
    }
    else {
      _$jscoverage['message.js'][16]++;
      console.error("Unexpected context for Message");
    }
  }
  _$jscoverage['message.js'][19]++;
  var Instance = this;
}
_$jscoverage['message.js'][23]++;
Object.defineProperties(Message.prototype, {pack: {value: (function pack(string) {
  _$jscoverage['message.js'][32]++;
  var Instance = this;
  _$jscoverage['message.js'][33]++;
  var msgpack = require("msgpack");
  _$jscoverage['message.js'][35]++;
  if (string instanceof Buffer) {
    _$jscoverage['message.js'][36]++;
    string = string.toString();
  }
  _$jscoverage['message.js'][39]++;
  return msgpack.pack(string);
}), enumerable: true, configurable: true, writable: true}, unpack: {value: (function unpack(string) {
  _$jscoverage['message.js'][54]++;
  var Instance = this;
  _$jscoverage['message.js'][55]++;
  var msgpack = require("msgpack");
  _$jscoverage['message.js'][57]++;
  if (string instanceof Buffer) {
    _$jscoverage['message.js'][58]++;
    string = string.toString();
  }
  _$jscoverage['message.js'][61]++;
  return msgpack.unpack(string);
}), enumerable: true, configurable: true, writable: true}});
_$jscoverage['message.js'][70]++;
Object.defineProperties(module.exports = Message, {create: {value: (function create(data) {
  _$jscoverage['message.js'][78]++;
  return new Message(data);
}), enumerable: true, configurable: true, writable: true}});
_$jscoverage['message.js'].source = ["/**"," * -"," *"," * -"," *"," * @author potanin"," * @date 8/10/13"," */","function Message( data ) {","","  if( this instanceof Message ) {","    var type = 'own';","  } else if( this instanceof require( './rabbit' ) ) {","    var type = 'rabbit';","  } else {","    console.error( 'Unexpected context for Message' );","  }","","  var Instance = this;","","}","","Object.defineProperties( Message.prototype, {","  pack: {","    /**","     * Pack String","     *","     * @param string","     * @returns {*}","     */","    value: function pack( string ) {","      var Instance    = this;","      var msgpack     = require( 'msgpack' );","","      if( string instanceof Buffer ) {","        string = string.toString();","      }","","      return msgpack.pack( string );","","    },","    enumerable: true,","    configurable: true,","    writable: true","  },","  unpack: {","    /**","     * Unpack Message","     *","     * @param string","     * @returns {*}","     */","    value: function unpack( string ) {","      var Instance    = this;","      var msgpack     = require( 'msgpack' );","","      if( string instanceof Buffer ) {","        string = string.toString();","      }","","      return msgpack.unpack( string )","","    },","    enumerable: true,","    configurable: true,","    writable: true","  }","})","","Object.defineProperties( module.exports = Message, {","  create: {","    /**","     *","     * @param data","     * @returns {Message}","     */","    value: function create( data ) {","      return new Message( data );","    },","    enumerable: true,","    configurable: true,","    writable: true","  }","})"];
